[tox]
envlist = py310-tests
minversion = 3.25.0
requires =
  tox-run-command
tox_pyenv_fallback = false
isolated_build = true

[testenv]
recreate = true
skip_install =
    {format,checkformatting,coverage}: true
setenv =
    FLASK_APP = python_multiversion_dependency_management_demo.app
deps =
    lint: -r requirements/py310/lint.txt
    {format,checkformatting}: -r requirements/py310/format.txt
    coverage: -r requirements/py310/coverage.txt
    py310-dev: -r requirements/py310/dev.txt
    py310-tests: -r requirements/py310/tests.txt
    py310-functests: -r requirements/py310/functests.txt
    py39-dev: -r requirements/py39/dev.txt
    py39-tests: -r requirements/py39/tests.txt
    py39-functests: -r requirements/py39/functests.txt
    py38-dev: -r requirements/py38/dev.txt
    py38-tests: -r requirements/py38/tests.txt
    py38-functests: -r requirements/py38/functests.txt
depends =
    coverage: {py310,py39,py38}-tests
commands =
    dev: flask run --port 5482
    lint: pylint src bin
    lint: pylint --rcfile=tests/pyproject.toml tests
    lint: pydocstyle src tests bin
    lint: pycodestyle src tests bin
    format: black src tests bin
    format: isort --quiet --atomic src tests bin
    checkformatting: black --check src tests bin
    checkformatting: isort --quiet --check-only src tests bin
    tests: coverage run -m pytest -v {posargs:tests/unit/}
    functests: pytest {posargs:tests/functional/}
    coverage: coverage combine
    coverage: coverage report
